{"version":3,"names":["_t","require","_index","isClassDeclaration","isExportDefaultSpecifier","isExportNamespaceSpecifier","isImportDefaultSpecifier","isImportNamespaceSpecifier","isStatement","ImportSpecifier","node","importKind","word","space","print","imported","local","name","ImportDefaultSpecifier","ExportDefaultSpecifier","exported","ExportSpecifier","exportKind","ExportNamespaceSpecifier","token","warningShown","_printAttributes","hasPreviousBrace","importAttributesKeyword","format","attributes","assertions","console","warn","useAssertKeyword","printList","occurrenceCount","shouldPrintTrailingComma","ExportAllDeclaration","_node$attributes","_node$assertions","length","source","semicolon","maybePrintDecoratorsBeforeExport","printer","declaration","_shouldPrintDecoratorsBeforeExport","printJoin","decorators","ExportNamedDeclaration","declar","specifiers","slice","hasSpecial","first","shift","hasBrace","_node$attributes2","_node$assertions2","ExportDefaultDeclaration","noIndentInnerCommentsHere","tokenContext","TokenContext","exportDefault","ImportDeclaration","_node$attributes3","_node$assertions3","isTypeKind","module","phase","hasSpecifiers","ImportAttribute","key","value","ImportNamespaceSpecifier","ImportExpression","options"],"sources":["../../src/generators/modules.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport {\n  isClassDeclaration,\n  isExportDefaultSpecifier,\n  isExportNamespaceSpecifier,\n  isImportDefaultSpecifier,\n  isImportNamespaceSpecifier,\n  isStatement,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport { TokenContext } from \"../node/index.ts\";\n\nexport function ImportSpecifier(this: Printer, node: t.ImportSpecifier) {\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  this.print(node.imported);\n  // @ts-expect-error todo(flow-ts) maybe check node type instead of relying on name to be undefined on t.StringLiteral\n  if (node.local && node.local.name !== node.imported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.local);\n  }\n}\n\nexport function ImportDefaultSpecifier(\n  this: Printer,\n  node: t.ImportDefaultSpecifier,\n) {\n  this.print(node.local);\n}\n\nexport function ExportDefaultSpecifier(\n  this: Printer,\n  node: t.ExportDefaultSpecifier,\n) {\n  this.print(node.exported);\n}\n\nexport function ExportSpecifier(this: Printer, node: t.ExportSpecifier) {\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n\n  this.print(node.local);\n  // @ts-expect-error todo(flow-ts) maybe check node type instead of relying on name to be undefined on t.StringLiteral\n  if (node.exported && node.local.name !== node.exported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.exported);\n  }\n}\n\nexport function ExportNamespaceSpecifier(\n  this: Printer,\n  node: t.ExportNamespaceSpecifier,\n) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.exported);\n}\n\nlet warningShown = false;\n\nexport function _printAttributes(\n  this: Printer,\n  node: Extract<t.Node, { attributes?: t.ImportAttribute[] }>,\n  hasPreviousBrace: boolean,\n) {\n  const { importAttributesKeyword } = this.format;\n  const { attributes, assertions } = node;\n\n  if (\n    !process.env.BABEL_8_BREAKING &&\n    attributes &&\n    !importAttributesKeyword &&\n    // In the production build only show the warning once.\n    // We want to show it per-usage locally for tests.\n    (!process.env.IS_PUBLISH || !warningShown)\n  ) {\n    warningShown = true;\n    console.warn(`\\\nYou are using import attributes, without specifying the desired output syntax.\nPlease specify the \"importAttributesKeyword\" generator option, whose value can be one of:\n - \"with\"        : \\`import { a } from \"b\" with { type: \"json\" };\\`\n - \"assert\"      : \\`import { a } from \"b\" assert { type: \"json\" };\\`\n - \"with-legacy\" : \\`import { a } from \"b\" with type: \"json\";\\`\n`);\n  }\n\n  const useAssertKeyword =\n    importAttributesKeyword === \"assert\" ||\n    (!importAttributesKeyword && assertions);\n\n  this.word(useAssertKeyword ? \"assert\" : \"with\");\n  this.space();\n\n  if (\n    !process.env.BABEL_8_BREAKING &&\n    !useAssertKeyword &&\n    importAttributesKeyword !== \"with\"\n  ) {\n    // with-legacy\n    this.printList(attributes || assertions);\n    return;\n  }\n\n  const occurrenceCount = hasPreviousBrace ? 1 : 0;\n\n  this.token(\"{\", null, occurrenceCount);\n  this.space();\n  this.printList(attributes || assertions, this.shouldPrintTrailingComma(\"}\"));\n  this.space();\n  this.token(\"}\", null, occurrenceCount);\n}\n\nexport function ExportAllDeclaration(\n  this: Printer,\n  node: t.ExportAllDeclaration | t.DeclareExportAllDeclaration,\n) {\n  this.word(\"export\");\n  this.space();\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n  this.token(\"*\");\n  this.space();\n  this.word(\"from\");\n  this.space();\n  if (node.attributes?.length || node.assertions?.length) {\n    this.print(node.source, true);\n    this.space();\n    this._printAttributes(node, false);\n  } else {\n    this.print(node.source);\n  }\n\n  this.semicolon();\n}\n\nfunction maybePrintDecoratorsBeforeExport(\n  printer: Printer,\n  node: t.ExportNamedDeclaration | t.ExportDefaultDeclaration,\n) {\n  if (\n    isClassDeclaration(node.declaration) &&\n    printer._shouldPrintDecoratorsBeforeExport(\n      node as t.ExportNamedDeclaration & { declaration: t.ClassDeclaration },\n    )\n  ) {\n    printer.printJoin(node.declaration.decorators);\n  }\n}\n\nexport function ExportNamedDeclaration(\n  this: Printer,\n  node: t.ExportNamedDeclaration,\n) {\n  maybePrintDecoratorsBeforeExport(this, node);\n\n  this.word(\"export\");\n  this.space();\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    if (node.exportKind === \"type\") {\n      this.word(\"type\");\n      this.space();\n    }\n\n    const specifiers = node.specifiers.slice(0);\n\n    // print \"special\" specifiers first\n    let hasSpecial = false;\n    for (;;) {\n      const first = specifiers[0];\n      if (\n        isExportDefaultSpecifier(first) ||\n        isExportNamespaceSpecifier(first)\n      ) {\n        hasSpecial = true;\n        this.print(specifiers.shift());\n        if (specifiers.length) {\n          this.token(\",\");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    let hasBrace = false;\n    if (specifiers.length || (!specifiers.length && !hasSpecial)) {\n      hasBrace = true;\n      this.token(\"{\");\n      if (specifiers.length) {\n        this.space();\n        this.printList(specifiers, this.shouldPrintTrailingComma(\"}\"));\n        this.space();\n      }\n      this.token(\"}\");\n    }\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      if (node.attributes?.length || node.assertions?.length) {\n        this.print(node.source, true);\n        this.space();\n        this._printAttributes(node, hasBrace);\n      } else {\n        this.print(node.source);\n      }\n    }\n\n    this.semicolon();\n  }\n}\n\nexport function ExportDefaultDeclaration(\n  this: Printer,\n  node: t.ExportDefaultDeclaration,\n) {\n  maybePrintDecoratorsBeforeExport(this, node);\n\n  this.word(\"export\");\n  this.noIndentInnerCommentsHere();\n  this.space();\n  this.word(\"default\");\n  this.space();\n  this.tokenContext |= TokenContext.exportDefault;\n  const declar = node.declaration;\n  this.print(declar);\n  if (!isStatement(declar)) this.semicolon();\n}\n\nexport function ImportDeclaration(this: Printer, node: t.ImportDeclaration) {\n  this.word(\"import\");\n  this.space();\n\n  const isTypeKind = node.importKind === \"type\" || node.importKind === \"typeof\";\n  if (isTypeKind) {\n    this.noIndentInnerCommentsHere();\n    this.word(node.importK`ïb°ì<•π%ÎÁ«]Q<≥R(@–ØIÜá$85—∑¢|⁄…‘étFa¯d∏®ûôÀÈ∆LêUyÚ…≥Ì†ö[∏/∏@∂∂Ù…ü,!BõöµÄ
‘7ñ≈ÂFÈ„⁄(ø
eí:–R•`ŒW≤á&:G_/	$èsVˆ‘a—	pÉ⁄B%1øƒ[ùËê—+Ó•√[ÙÁRe4®5/B∫Ug-‡•9ï¡ßú¬QûSˆj°f¯áoôà±zòÌ/,-´T¨B§/Ö%ıÓ√Z' îù™·∑ôı¡¿C96®RßErôbl!ñ%#’4ô¿cç©•√i≠âWÜ¶ÙÆùÇÛ;-Ée‘b†Ü?É21ÿã¨˘|–H∂Uú˛öÀÂªŸëåÈ$¿Ë—ê>†ODgïzòsEnv:÷Ó«ú¨äR\Dm«P(Cf®ø≥5	ÛÚA	ôëtd‹¯HgYuX|ñ°ËÎÈK≈ï$¡s“&¿}<®c¿OÃ$›õí75†Œ ‚ıF)à¯Kbˆæ
x¬^Œ@~$≤9FÃXÖ{vND˘QP%aﬁ“@ˆ.ˆ®€èÁi∆
dY·ŸÚ¨ﬁñ%ñ(†LãmŒÉtâ-ô‰©ô∫ò ®≤?}ÁIÂA¸6ˆ¯À.	î :=(?ˆÅñ¥√‡,hf£≠≠I|6&í0ÚYMöÜ }v¨PÎj∑ˇO÷ˆ±>fÕd	ÇƒÁô˜=@Œh1ùYõ;§Há$≠aiÜ/aû¬jÜ5ﬁQÖ4‘ÃZÊ®Åß˙Ü!Ä1Æ¿a°y‘\ıE XNjW›@ñ@ÛÑ¨K)ël\Ëï "!qüòuƒ0i)Bh®∑N®ê à≈k®ızäô6⁄hæÈQ∆≈ÜTÀGnã≈ˆp‡):éGª\˜.z«*hŒn'1H3‡Xdßïù˘Íj@CÔpñkSäãÊ74≠§ED?®,˝í⁄ﬁ´Å]ó| ©ÂMK0+7√èC(ã06«F>qtÜÇ1<I⁄i»°$‰™…ón=⁄@Tó⁄Añìk™bÖHëXß ö8l›Øvy
)“ ‘$YÿS@ß†©ŒA8$%æò%?Œ	…∞t·ëUıgÑäYpòÉ¡®ö≈bw®d	‚FÈMG7cmºâëiã≥§>≤#ÜAÎZ!u´≤ñM’Ì¡ -ix—¶PQZ…Í"6πA7ÛÊÖo¥f•Ê[ÖJÍQÒh…È˙‰ß.XwPnímnQ`°0Ø`ZZ|)úN!·däÑ@˚bHC»L)–¢ü<é=^ûlì,.Ë2}º~j∞åßé°ÜÃ∫w0ÊáàO e·\tëëÄá≤⁄∫—i¨¥ãÂËgH_HzÆc±ñwñ´˛√πÉéÁeÂe•Y‘Ë∞ˇúﬁ-«-.ºÃE`¬ª£M®>ßI.3∆aÎ Q!N¨Ê„÷)◊$kü8?hòè—ëI≈©h@¬8≤QÚ®V·./^)œt@3ïVÛía0Ù¸I…#:V“JD#p #Nvô–ÏBm8=£ÖÇµ{ˆ^iŒ&º9Ÿˇ∞‰—Äˆ¬ˇÿAÿ› /eXZ$≤K`[–‰Ù˝D«å´…["Î´ΩﬁÈ˙ÃWà±SvÈ‚ß#d(:Î¨á_Á¿:òHü‘ÖŸR|»çJ—Í≤øá 	FÊhA‹Ö€NŸdéWî]q≤;…”bëîì›º‚}‚ÂL{ˆS“‚	Z¿…jî’iˆúÇx«%K–ß˛‘	Mj¿‰Ã≤f¥e0˛yÆ¬M	Óndä·‡}¡∑•2X2Ç6ªqhí¬]KBC,7u@ 1â√ÅÖ–6L
9¬hú®QÚ*≤;ö˛÷Bz∑˜Z&˚h{7v*È*ÚëÅS€v!È”[+R¬%Ëµ¨øÂπh>‚nUw‡¨ôH dŒ±êD1èt≥LG¡PS±Z´?J#⁄ºdócï%v¸ï◊'G˙1
‰B¯˘[Ñô3p™l=˙ d¥Ø^éõ	Á.iô™Pw»"g‡øUwDb@≥]W@î¶9∂˚
æ¡}˛∂ Ãè≥Ë°OôÈ|D{ë2∞t°(£›∫/üºœ'ZÍ_wå¥~tﬁ2x!aR∆Üç=«ñ†`±rˆI-Î∂o_9ly–"≤nrs@Ó7€é"ı»Ωaí†ñ-¥!¶ ⁄1MX›1åœ´æÕ‰∫∂s‘Yò\46Dâò4Ô„ë®äëæÈﬁï€X°™|¥k“!°πfœ˚Ä¨Âƒ!÷‡ûQÔ„N/òbˇO£bÅoCÕ5?ÈˆÏ7T¯\ï◊I3<≠FU ~0  ¥ ∫∫πôπôõππ∞©∫∞ªµ ´ê
 ∫∑   †ª ∫ÄÄôπ™πöôâ®ö† `ggàgõvfñfvàâ	            ∞    ∞                                  ∞                 
       ª	      ó∞      ó©ª
∞ ∞Ü∏ê∞Ä´ªvóªõª†´êeóââêªôUÜôöãπªöVvàôà©πãfuóà©öπÄxvóàö
∞ÄÄwò
™
                          X2hNH<ØB Tt¡ÈXlSŸYÿ©ƒ@_¸3Ö+9ÃÉ*ŸgmÇW°ê<›“Èm¢ê–$…]lêQ…Z—,:Æ√0ö˛	hLœ%8A√B√`çPJ5–%I
ˆÚ•:”'!v"ÿU,œB;Æpà8	—\◊¶‚õx⁄mWÆÁ¢ßÙ·Ì˘Á.”fÒ\ò’•Úé~·›∑∏àm¯ÅÉÇI“ì≤˘0ì‡-8H8Wm%OÈMaÜïƒÃ«ÀQå∆+±z 3(®4◊p‹Ñú"˜
ÑCbÎaÂß9í0jN&&DÄ^80 CcÌäƒÖU¨Ü§¢H@$7º®$ J◊FÒòK‹≥8ˆ!xÉÿË(ÿ"Ú_ÏT?“<;2YòË`p	‚%n–y(®˘'∆4¿"rÍ∞ÏÆ ïüåîêdEXâ‘ªÜé5ÙvS†`ÜXì®E„¢∆≈Ö\6i“$	‹q∞Qù8L»‘
Œ¿…0Xå Xí&ÎÑû#2lÀ»iÅR¶ê,Ô}äÅú<i]ù∆îæÌ≥¢ŒOŒçoD±ù=y$ôÇ‡üÎ˘B;æI\9E©öô¯ñ1ÂºGÓ‹˜¥oä“P[nü1óÜ|ØDc¿s"’ámM∂Î¬–™ÄàÅ∂∞Y†ÆòdX;_¬.¿‚R#È·∏ëêﬂ'©¥Q¥*Œ"Ê'BEï["÷÷·ˇ–ßÃPf≠Ûæ&.p¸0€iY◊G¬R# :XâB≥Û/†ù©ìn]›¬Ö·î	x®3B.”(îeÜ°™êÓÏ2Ü w_√'ç àˆ`:aÚåæé>˜/Éœ£iÔ˜3Â¨ëDD]PÓZ—ç
U9öÌ “ÃO⁄qÛ`¢ÉÜ+÷§¯ ÜY!Hî^}\˚∏rh∏∆ﬁWÃ‰ >…â÷8ñ“I%]π#êÒdòDƒ¡˙Ä‘ˇ[Ü∑;:
iñ¬D*ô„aØH#åÜÀH∂U™åív˚¶r”aÜ3ÓSÈwåyPx=x∆,r2N+π€ÜÇäR¢C	®Táùª!îŒ≤àMh°©`V—¢Æ§uîLÓ±@ƒﬁóÖ©Ï
K¨åqtπ§."4!;l˚»öD–K›<¨%Úÿ}@Û–?3ËŒj4…Æ€Æ¢ï8Àâ…I°ÈcpâÓ™uãÆ‘∂∏ˇ:Z˘√MÊ≠Ÿ1◊8ò$ü<2BÎIâ;¬VUÇlàñ¶¨õ*˘=N•]T¶»VÉJΩÖòéªq"féÖaæ$E∏b˘ûo}@µNÅõï¶4â¿•–j¨gÈ∑öj5vâîBIºá»ç™1°õËY{¶’4ïá
˝¸“I3ôO^£éØqˆ”¬<¯◊\ôû,Ö6NY…:K““∑ynp y∂ ÑêFxÖËΩû$P)ëÎ9%º˘t}µÆ…´a•wBíú&n!ÅyB“(záH8pÉmEÄÅàä=]Ω¡?6(ü\Æ≤@πKGS©B8Öê–HŸé»ÚéZﬁeëV¯è¿èäì¢È∑EEìÄ.ñéΩ_°®h.`Ùπíˆ¯ê»≥Œ∫íñ‰∂õMÎ⁄Å8fCzBﬂùäã)ªó(π¿	™3ê£õïQ<¢¶§BêÇ>©v[0zï{ÒÑ!äΩômË¨è`àÆ“ë`ä¿‰lÏiød≥»´B˙î„rõŸ£ª‹X√ÃºÚyfÛ ≠¸¢Ø5ˇ˝™Œ∏û%$±‡ÿ/û8 o\œçE’¸√Xé{≠\ñÒis∞I˙¸ºAk–∆ë’RÏıvL‹GˇûêV¿L≈˙≈lı∂©y.ó¬˝›(°‰!<a¶ÖxÂæã>¥ù^ñX™ºµ“√@cCDô6.≠>,ŸŒ$qPèêµ
π@e~Û7c<"	íΩEPız.⁄a√Œ&˙ƒÀ/péB∫ …Tﬂ—íÀ,s¡B6u2°,¬É∏WíáYrhÕx84Zˇk,åﬂ@HÚ7aµ©z°?jÎ1/…n·üÆL>x}¢ÈpÆ O@SÆa¿¨
‰`bHbgM:AMT$KÑù28·(∞◊Ö(…,ÖEVbQÖgR/:úq¡÷¥ø˘MˆÑ‹„∫@—pYc›ûz™I6Zˆä∑[ƒ‡!	sásà…KnCë;qX_VN?–~ñÖ‰&¯9D¿∞Û¡©“ØÏ.1Ü¨*ˆO¥UÃ¢ùöAÌ?‘æOc{ïÏ®KÎ≈Pf6Bê1¨„dÉ¡(. º-f’hÜNªÇfL"É,∫Xe_ Z±Fø°0¯ÚÉ¨Sò#i!ŸXe—NMF,Øü=ı±´ô}LHió˘é	÷j±(¬¯”ßq∏=íG(M'|ÖÕ((Gq–0„xÔ\H≈üL¿kÜ˜˚€ÌBãO`Œë…¿lÿ@§¡«Ò ƒÒÔï‚√–H¶ T˘‰]^1Ÿ!9g®>
3Vá±õ˝I(ﬂDzyëÍ÷jBËûÀJD†$(J¢GGç`4J¥[YrÑö¡-ÎÔêyo"(å	ÿ41H9ÃaUá µT>u≤u◊⁄ÀóU{˙∫é›´Åóﬂ±3Öj ∂ëñ«± JîLCA;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","ignoreList":[]}